<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XUnity.Common</name>
    </assembly>
    <members>
        <member name="T:XUnity.Common.Extensions.ExceptionExtensions">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
        </member>
        <member name="M:XUnity.Common.Extensions.ExceptionExtensions.FirstInnerExceptionOfType``1(System.Exception)">
            <summary>
            WARNING: Pubternal API (internal)v. Do not use. May change during any update.
            </summary>
            <typeparam name="TException"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:XUnity.Common.Extensions.StringExtensions">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
        </member>
        <member name="M:XUnity.Common.Extensions.StringExtensions.MakeRelativePath(System.String,System.String)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <param name="fullOrRelativePath"></param>
            <param name="basePath"></param>
            <returns></returns>
        </member>
        <member name="M:XUnity.Common.Extensions.StringExtensions.SanitizeForFileSystem(System.String)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:XUnity.Common.Extensions.StringExtensions.SplitToLines(System.String,System.Int32,System.Char[])">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <param name="text"></param>
            <param name="maxStringLength"></param>
            <param name="splitOnCharacters"></param>
            <returns></returns>
        </member>
        <member name="M:XUnity.Common.Extensions.StringExtensions.StartsWithStrict(System.String,System.String)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <param name="str"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:XUnity.Common.Extensions.StringExtensions.GetBetween(System.String,System.String,System.String)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <param name="strSource"></param>
            <param name="strStart"></param>
            <param name="strEnd"></param>
            <returns></returns>
        </member>
        <member name="M:XUnity.Common.Extensions.StringExtensions.RemindsOf(System.String,System.String)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <param name="that"></param>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:XUnity.Common.Harmony.AccessToolsShim">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
        </member>
        <member name="M:XUnity.Common.Harmony.AccessToolsShim.Method(System.Type,System.String,System.Type[])">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:XUnity.Common.Harmony.AccessToolsShim.Property(System.Type,System.String)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:XUnity.Common.Logging.LogLevel">
            <summary>
            Enum representing available log levels.
            </summary>
        </member>
        <member name="F:XUnity.Common.Logging.LogLevel.Debug">
            <summary>
            Debug log level.
            </summary>
        </member>
        <member name="F:XUnity.Common.Logging.LogLevel.Info">
            <summary>
            Info log level.
            </summary>
        </member>
        <member name="F:XUnity.Common.Logging.LogLevel.Warn">
            <summary>
            Warn log level.
            </summary>
        </member>
        <member name="F:XUnity.Common.Logging.LogLevel.Error">
            <summary>
            Error log level.
            </summary>
        </member>
        <member name="T:XUnity.Common.Logging.XuaLogger">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
        </member>
        <member name="P:XUnity.Common.Logging.XuaLogger.AutoTranslator">
            <summary>
            Gets the auto translator logger.
            </summary>
        </member>
        <member name="P:XUnity.Common.Logging.XuaLogger.Common">
            <summary>
            Gets the common logger.
            </summary>
        </member>
        <member name="P:XUnity.Common.Logging.XuaLogger.ResourceRedirector">
            <summary>
            Gets the resource redirector logger.
            </summary>
        </member>
        <member name="M:XUnity.Common.Logging.XuaLogger.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:XUnity.Common.Logging.XuaLogger.Source">
            <summary>
            Gets the source to be written to the log.
            </summary>
        </member>
        <member name="M:XUnity.Common.Logging.XuaLogger.Error(System.Exception,System.String)">
            <summary>
            Logs a message and exception at error level.
            </summary>
            <param name="e">The exception to log.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:XUnity.Common.Logging.XuaLogger.Error(System.String)">
            <summary>
            Logs a message at error level.
            </summary>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:XUnity.Common.Logging.XuaLogger.Warn(System.Exception,System.String)">
            <summary>
            Logs a message and exception at warn level.
            </summary>
            <param name="e"></param>
            <param name="message"></param>
        </member>
        <member name="M:XUnity.Common.Logging.XuaLogger.Warn(System.String)">
            <summary>
            Logs a message at warn level.
            </summary>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:XUnity.Common.Logging.XuaLogger.Info(System.Exception,System.String)">
            <summary>
            Logs a message and exception at info level.
            </summary>
            <param name="e"></param>
            <param name="message"></param>
        </member>
        <member name="M:XUnity.Common.Logging.XuaLogger.Info(System.String)">
            <summary>
            Logs a message at info level.
            </summary>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:XUnity.Common.Logging.XuaLogger.Debug(System.Exception,System.String)">
            <summary>
            Logs a message and exception at debug level.
            </summary>
            <param name="e"></param>
            <param name="message"></param>
        </member>
        <member name="M:XUnity.Common.Logging.XuaLogger.Debug(System.String)">
            <summary>
            Logs a message at debug level.
            </summary>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:XUnity.Common.Logging.XuaLogger.Log(XUnity.Common.Logging.LogLevel,System.String)">
            <summary>
            Logs a message at the specified level.
            </summary>
            <param name="level"></param>
            <param name="message"></param>
        </member>
        <member name="M:XUnity.Common.Logging.XuaLogger.GetDefaultPrefix(XUnity.Common.Logging.LogLevel)">
            <summary>
            Gets the default prefix for a log message at the specific level.
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="T:XUnity.Common.MonoMod.DetourExtensions">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
        </member>
        <member name="M:XUnity.Common.MonoMod.DetourExtensions.GenerateTrampolineEx``1(System.Object)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="detour"></param>
            <returns></returns>
        </member>
        <member name="T:XUnity.Common.Utilities.CabHelper">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
        </member>
        <member name="M:XUnity.Common.Utilities.CabHelper.RandomizeCab(System.Byte[])">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <param name="assetBundleData"></param>
        </member>
        <member name="T:XUnity.Common.Utilities.ExpressionHelper">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
        </member>
        <member name="M:XUnity.Common.Utilities.ExpressionHelper.CreateTypedFastInvoke(System.Reflection.MethodInfo)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:XUnity.Common.Utilities.ExpressionHelper.CreateFastInvoke(System.Reflection.MethodInfo)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="T:XUnity.Common.Utilities.ExtensionDataHelper">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
        </member>
        <member name="P:XUnity.Common.Utilities.ExtensionDataHelper.WeakReferenceCount">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
        </member>
        <member name="M:XUnity.Common.Utilities.ExtensionDataHelper.SetExtensionData``1(System.Object,``0)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="t"></param>
        </member>
        <member name="M:XUnity.Common.Utilities.ExtensionDataHelper.GetOrCreateExtensionData``1(System.Object)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:XUnity.Common.Utilities.ExtensionDataHelper.GetExtensionData``1(System.Object)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:XUnity.Common.Utilities.ExtensionDataHelper.Cull">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
        </member>
        <member name="M:XUnity.Common.Utilities.ExtensionDataHelper.GetAllRegisteredObjects">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XUnity.Common.Utilities.ExtensionDataHelper.Remove(System.Object)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:XUnity.Common.Utilities.HookingHelper">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
        </member>
        <member name="M:XUnity.Common.Utilities.HookingHelper.PatchAll(System.Collections.Generic.IEnumerable{System.Type},System.Boolean)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <param name="types"></param>
            <param name="forceMonoModHooks"></param>
        </member>
        <member name="M:XUnity.Common.Utilities.HookingHelper.PatchType(System.Type,System.Boolean)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <param name="type"></param>
            <param name="forceMonoModHooks"></param>
        </member>
        <member name="T:XUnity.Common.Utilities.HookingHelperPriorityAttribute">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
        </member>
        <member name="F:XUnity.Common.Utilities.HookingHelperPriorityAttribute.priority">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
        </member>
        <member name="M:XUnity.Common.Utilities.HookingHelperPriorityAttribute.#ctor(System.Int32)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <param name="priority"></param>
        </member>
        <member name="T:XUnity.Common.Utilities.ListExtensions">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
        </member>
        <member name="M:XUnity.Common.Utilities.ListExtensions.BinarySearchInsert``1(System.Collections.Generic.List{``0},``0)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items"></param>
            <param name="item"></param>
        </member>
        <member name="T:XUnity.Common.Utilities.MaintenanceHelper">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
        </member>
        <member name="M:XUnity.Common.Utilities.MaintenanceHelper.AddMaintenanceFunction(System.Action,System.Int32)">
            <summary>
            WARNING: Pubternal API (internal). Do not use. May change during any update.
            </summary>
            <param name="action"></param>
            <param name="filter"></param>
        </member>
        <member name="T:XUnity.Common.Utilities.WeakDictionary`2">
            <summary>
            A generic dictionary, which allows both its keys and values 
            to be garbage collected if there are no other references
            to them than from the dictionary itself.
            </summary>
            
            <remarks>
            If either the key or value of a particular entry in the dictionary
            has been collected, then both the key and value become effectively
            unreachable. However, left-over WeakReference objects for the key
            and value will physically remain in the dictionary until
            RemoveCollectedEntries is called. This will lead to a discrepancy
            between the Count property and the number of iterations required
            to visit all of the elements of the dictionary using its
            enumerator or those of the Keys and Values collections. Similarly,
            CopyTo will copy fewer than Count elements in this situation.
            </remarks>
        </member>
        <member name="T:XUnity.Common.Utilities.BaseDictionary`2">
            <summary>
            Represents a dictionary mapping keys to values.
            </summary>
        </member>
    </members>
</doc>
